apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "vault.fullname" . }}
data:
  policy.hcl: |-
    path "secret/infrapack/*" {
    capabilities = ["read"]
    }
  config.sh: |-
    #!/bin/sh
    export TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
    apk add --no-cache curl jq

    export VAULT_ADDR="http://{{ .Release.Name }}-vault.{{ .Release.Namespace }}.svc:8200"
    export VAULT_SKIP_VERIFY="true"
    export VAULT_TOKEN=$(curl -k --header "Authorization: Bearer $TOKEN" https://kubernetes.default.svc/api/v1/namespaces/{{ .Release.Namespace }}/pods/ -s|jq -r '.items[]|.metadata.name'|xargs -I % curl -s -k --header "Authorization: Bearer $TOKEN" https://kubernetes.default.svc/api/v1/namespaces/{{ .Release.Namespace }}/pods/%/log|grep "Root Token"|awk '{print $3}')
    
    echo "TOKEN: $TOKEN" 
    echo "VAULT_TOKEN: $VAULT_TOKEN"

    vault auth-enable kubernetes && \
    vault write auth/kubernetes/config kubernetes_host=https://kubernetes.default.svc kubernetes_ca_cert=@/var/run/secrets/kubernetes.io/serviceaccount/ca.crt token_reviewer_jwt=$TOKEN && \
    vault write sys/policy/infrapack policy=@policy.hcl && \
    vault write auth/kubernetes/role/infrapack bound_service_account_names=default bound_service_account_namespaces=default policies=default,infrapack ttl=1h && \
    vault write secret/infrapack/test ping=pong